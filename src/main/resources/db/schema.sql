--Create the table at the startup of the DB

--------------------
-- idStrategy tables
--------------------

CREATE TABLE IF NOT EXISTS SIMPLE_CRUD_AUTO_ID (
   ID IDENTITY NOT NULL PRIMARY KEY,
   NAME varchar(250) NOT NULL,
   PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS SIMPLE_CRUD_MANUAL_ID_BY_CALL_BACK (
   ID varchar(250) NOT NULL,
   NAME varchar(250) NOT NULL,
   PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS SIMPLE_CRUD_MANUAL_ID_BY_PERSISTABLE (
   ID varchar(250) NOT NULL,
   NAME varchar(250) NOT NULL,
   PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS SIMPLE_CRUD_VERSIONED (
   ID IDENTITY NOT NULL PRIMARY KEY,
   NAME varchar(250) NOT NULL,
   VERSION INTEGER,
   PRIMARY KEY (ID)
);

--------------------------
-- createRepository tables
--------------------------

CREATE TABLE IF NOT EXISTS PAGEABLE_AND_SORTABLE (
   ID IDENTITY NOT NULL PRIMARY KEY,
   DISCRIMINATOR varchar(250) NOT NULL,
   NUMBER INTEGER,
   COMMON varchar(250) NOT NULL,
   PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS CUSTOM (
   ID IDENTITY NOT NULL PRIMARY KEY,
   DATA varchar(250) NOT NULL,
   PRIMARY KEY (ID)
);

---------------------------
-- defineQueryMethod tables
---------------------------

-- QueryByMethodTest
CREATE TABLE IF NOT EXISTS QUERY_BY_METHOD (
   ID IDENTITY NOT NULL PRIMARY KEY,
   NAME varchar(250) NOT NULL,
   AGE INTEGER,
   BIRTH_DATE  DATE NOT NULL,
   JOB varchar(250) NOT NULL,
   PRIMARY KEY (ID)
);


-- PropertyExpressionsTest
CREATE TABLE IF NOT EXISTS PROPERTY_EXPRESSIONS_ROOT (
   ID IDENTITY NOT NULL PRIMARY KEY,
   NAME varchar(250) NOT NULL,
   AGE INTEGER,
   JOB varchar(250),
   PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PROPERTY_EXPRESSIONS_NESTED (
   ID IDENTITY NOT NULL PRIMARY KEY,
   PROPERTY_EXPRESSIONS_ROOT INTEGER,
   ADDRESS varchar(250) NOT NULL,
   PRIMARY KEY (ID)
);

ALTER TABLE PROPERTY_EXPRESSIONS_NESTED
ADD CONSTRAINT FK_PROPERTY_EXPRESSIONS_NESTED
FOREIGN KEY (PROPERTY_EXPRESSIONS_ROOT)
REFERENCES PROPERTY_EXPRESSIONS_ROOT(ID)
ON DELETE CASCADE;


-- QueryByAnnotationTest
CREATE TABLE IF NOT EXISTS QUERY_BY_ANNOTATION_ROOT (
   ID IDENTITY NOT NULL PRIMARY KEY,
   NAME varchar(250) NOT NULL,
   AGE INTEGER,
   JOB varchar(250),
   PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS QUERY_BY_ANNOTATION_NESTED_ONE (
   QUERY_BY_ANNOTATION_ROOT INTEGER,
   NESTED_NAME varchar(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS QUERY_BY_ANNOTATION_NESTED_MANY (
   QUERY_BY_ANNOTATION_ROOT INTEGER,
   ELEMENT varchar(250) NOT NULL
);

ALTER TABLE QUERY_BY_ANNOTATION_NESTED_ONE
ADD CONSTRAINT FK_QUERY_BY_ANNOTATION_NESTED_ONE
FOREIGN KEY (QUERY_BY_ANNOTATION_ROOT)
REFERENCES QUERY_BY_ANNOTATION_ROOT(ID)
ON DELETE CASCADE;

ALTER TABLE QUERY_BY_ANNOTATION_NESTED_MANY
ADD CONSTRAINT FK_QUERY_BY_ANNOTATION_NESTED_MANY
FOREIGN KEY (QUERY_BY_ANNOTATION_ROOT)
REFERENCES QUERY_BY_ANNOTATION_ROOT(ID)
ON DELETE CASCADE;


-- ModifyByQueryAnnotationTest
CREATE TABLE IF NOT EXISTS MODIFY_BY_QUERY_ANNOTATION (
   ID IDENTITY NOT NULL PRIMARY KEY,
   NAME varchar(250) NOT NULL,
   VERSION INTEGER,
   PRIMARY KEY (ID)
);

